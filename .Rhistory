library(ade4)
library(ggrepel)
library(tidyverse)
#Funcion con 5 componentes del PCA
# renglon = a los valores por renglón
# columnas 0 los valores por columnas
# Variables = la variable categ´órica
#Titulo = Es el titulo de la grafica
#Multiplicador =  un valor para re-escalar la gráfica
PCbiplot <- function(datos, Variables, Titulo, multiplicador){
#pca1
pca1 <- dudi.pca(datos, scannf = F, nf = 3)
pca1a <- data.frame(pca1$li)
pca1b <- data.frame(pca1$co)
Variables <- Variables
Titulo <- as.character(c(Titulo))
Eigen <- pca1$eig
PC1 <- round(100*(Eigen/sum(Eigen)),1)[1]
PC2 <- round(100*(Eigen/sum(Eigen)),1)[2]
p1 <- ggplot(pca1a,aes(x = Axis1, y = Axis2)) +
theme_classic() +
geom_hline(yintercept = 0, color = "gray70") +
geom_vline(xintercept = 0, color = "gray70") +
geom_point(aes(color = Variables), alpha = 0.7, size = 3) +
xlab(paste(PC1, "%", sep = " ")) +
ylab(paste(PC2, "%", sep = " ") ) +
#xlim(-5, 6) +
ggtitle(Titulo)
p2 <- p1 +
geom_point(data = pca1b, aes(x = multiplicador*Comp1, y = multiplicador*Comp2), alpha = 0) +
geom_label_repel(data = pca1b, aes(x = multiplicador*Comp1, y = multiplicador*Comp2, label = rownames(pca1b)),
box.padding   = 0.7, point.padding = 0.5, size = 4, alpha = 0.7) +
geom_segment(data =  pca1b, aes(x = 0, y = 0, xend = multiplicador*Comp1, yend = multiplicador*Comp2), arrow = arrow(length = unit(0.2,"cm")), alpha = 0.7, color = "black")
p2
}
iris
head(iris)
iris[,4]
iris1 <- list(var = iris[,1:4], value = iris[,5])
PCbiplot(iris1$var, iris1$value, "Hola", 1)
